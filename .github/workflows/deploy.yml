# .github/workflows/deploy.yml
name: Docker Build and Terraform Deploy

on:
  push:
    branches:
      - main

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_docker_image_name: ${{ secrets.TF_VAR_DOCKER_IMAGE_NAME }}
  DOCKER_DRIVER: overlay2
  TF_INPUT: "false"
  TF_IN_AUTOMATION: "true"

jobs:
  build:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ secrets.TF_VAR_DOCKER_IMAGE_NAME }}

  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug Terraform Inputs
        run: |
          echo "api_url=$TF_VAR_api_url"
          echo "api_key=$TF_VAR_api_key"
          echo "secret_key=$TF_VAR_secret_key"
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init -reconfigure

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        env:
          TF_VAR_api_url: ${{ secrets.TF_VAR_API_URL }}
          TF_VAR_api_key: ${{ secrets.TF_VAR_API_KEY }}
          TF_VAR_secret_key: ${{ secrets.SECRET_KEY }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
